plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.2'
	id 'io.spring.dependency-management' version '1.1.4'
	id 'checkstyle'
	id 'jacoco'
}

checkstyle {
	toolVersion '10.13.0'
	configFile = file("${rootDir}/config/checkstyle/checkstyle.xml")
}

group = 'nl.tudelft.medtechchain'
version = '1.0.0'

java {
	sourceCompatibility = '21'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'

	// Lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// Persistence
	implementation group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa', version: '3.2.2'
	// H2 in-memory database for testing
	implementation group: 'com.h2database', name: 'h2', version: '2.2.224'
	// PostgreSQL database for production
	implementation group: 'org.postgresql', name: 'postgresql', version: '42.7.2'

	// JWT
	implementation group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.12.5'
	implementation group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.12.5'
	implementation group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.12.5'

	// Jackson for JSON parsing
	implementation group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: '2.16.1'

	// Email support
	implementation 'org.springframework.boot:spring-boot-starter-mail:3.2.3'

	// Chaincode
	implementation 'org.hyperledger.fabric:fabric-gateway:1.4.0'
	compileOnly 'io.grpc:grpc-api:1.59.0'
	implementation 'io.grpc:grpc-netty-shaded:1.59.0'

	// Testing
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testImplementation 'org.junit.jupiter:junit-jupiter-api:5.10.2'
	testImplementation 'org.mockito:mockito-core:5.11.0'
	testImplementation 'org.assertj:assertj-core:3.25.3'  // The best testing framework
	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
}

test {
	useJUnitPlatform()
	jacoco {
		enabled = true
		includes = ['nl.tudelft.medtechchain.*']
		excludes = []
	}
	finalizedBy jacocoTestReport // report is always generated after tests run
}

jacocoTestCoverageVerification() {
	dependsOn test
	violationRules {
		rule {
			enabled = true
			element = 'CLASS'
			includes = ['nl.tudelft.medtechchain.*']

			limit {
				counter = 'BRANCH'
				value = 'COVEREDRATIO'
				// minimum = 0.1
			}
		}
	}
}

jacocoTestReport {
	// (https://docs.gradle.org/current/userguide/jacoco_plugin.html)
	// Responsible for aggregating the code coverage reports
	dependsOn {
		test
		jacocoTestCoverageVerification
	}

	// Output html and csv (used to extract coverage percentage)
	reports {
		xml.required = false
		csv.required = true
		html.required = true
	}
}